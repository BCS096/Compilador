/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package compilador.main;

import java.awt.Color;
import java.awt.Font;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTextArea;

/**
 *
 * @author emanu
 */
public class MVP extends javax.swing.JFrame {

    StringBuilder lexicText = new StringBuilder("");
    JTextArea[] lexicPanes;
    private int currentLexicTextIdx = -1;
    JScrollPane[] lexicScrollPanes;
    StringBuilder sintacticText = new StringBuilder("");
    JTextArea[] sintPanes;
    private int currentSintTextIdx = -1;
    JScrollPane[] sintScrollPanes;
    StringBuilder semanticCode = new StringBuilder("");
    StringBuilder semanticError = new StringBuilder("");
    JTextArea[] semPanesCode;
    JTextArea[] semPanesError;
    private int currentSemTextIdx = -1;
    JScrollPane[] semScrollPanesC;
    JScrollPane[] semScrollPanesE;
    String carpeta = null;
    private boolean semantic = false;

    /**
     * Creates new form MVP
     */
    public MVP() {
        initComponents();
    }

    public void enable() {
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jTabbedPane5 = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Load folder");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Folder path...");

        jButton2.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jButton2.setText("Start");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(478, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 440, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Menu", jPanel3);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1084, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Lexic", jPanel2);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1084, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Sintactic", jPanel4);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1084, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Semantic", jPanel5);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );

        jTabbedPane2.getAccessibleContext().setAccessibleName("Lexic");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(carpeta != null){
            resetLexic();
            Main2021.fileWait.release();
        }else{
            JOptionPane.showMessageDialog(null, "No files were selected!");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        final JFileChooser fc = new JFileChooser(System.getProperty("user.dir"));
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int option = fc.showOpenDialog(jPanel3);
        if (option == JFileChooser.APPROVE_OPTION) {
            carpeta = fc.getSelectedFile().getPath();
            jLabel1.setText(carpeta);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MVP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MVP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MVP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MVP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new MVP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTabbedPane jTabbedPane5;
    // End of variables declaration//GEN-END:variables

    public void setLexic(String newText) {
        lexicText.append(newText);
        this.lexicPanes[currentLexicTextIdx].setText(lexicText.toString());
    }

    public void resetLexic() {
        this.lexicText = new StringBuilder("");
        currentLexicTextIdx = -1;
    }

    public void addLexic(String fileName) {
        ++currentLexicTextIdx;
        this.lexicText = new StringBuilder("");
        lexicPanes[currentLexicTextIdx] = new JTextArea("Lexic here...");
        lexicPanes[currentLexicTextIdx].setEditable(false);
        lexicScrollPanes[currentLexicTextIdx] = new JScrollPane();
        lexicPanes[currentLexicTextIdx].setColumns(20);
        lexicPanes[currentLexicTextIdx].setRows(5);
        lexicScrollPanes[currentLexicTextIdx].setViewportView(lexicPanes[currentLexicTextIdx]);

        jTabbedPane1.addTab(fileName, lexicScrollPanes[currentLexicTextIdx]);
    }
    
    public void addSintactic(String fileName) {
        ++currentSintTextIdx;
        this.sintacticText = new StringBuilder("");
        sintPanes[currentSintTextIdx] = new JTextArea("No sintactic errors for now...");
        sintPanes[currentSintTextIdx].setEditable(false);
        sintScrollPanes[currentSintTextIdx] = new JScrollPane();
        sintPanes[currentSintTextIdx].setColumns(20);
        sintPanes[currentSintTextIdx].setRows(5);
        sintScrollPanes[currentSintTextIdx].setViewportView(sintPanes[currentSintTextIdx]);

        jTabbedPane3.addTab(fileName, sintScrollPanes[currentSintTextIdx]);
    }
    
    public void addSemantic(String fileName) {
        ++currentSemTextIdx;
        this.semanticCode = new StringBuilder("");
        this.semanticError = new StringBuilder("");
        semPanesError[currentSemTextIdx] = new JTextArea("No semantic errors for now...");
        semPanesError[currentSemTextIdx].setEditable(false);
        semPanesCode[currentSemTextIdx] = new JTextArea("Generating code...");
        semPanesCode[currentSemTextIdx].setEditable(false);
        semScrollPanesC[currentSemTextIdx] = new JScrollPane();
        semScrollPanesE[currentSemTextIdx] = new JScrollPane();
        semPanesCode[currentSemTextIdx].setColumns(20);
        semPanesCode[currentSemTextIdx].setRows(5);
        semPanesError[currentSemTextIdx].setColumns(20);
        semPanesError[currentSemTextIdx].setRows(5);
        semScrollPanesC[currentSemTextIdx].setViewportView(semPanesCode[currentSemTextIdx]);
        semScrollPanesE[currentSemTextIdx].setViewportView(semPanesError[currentSemTextIdx]);
        
        JTabbedPane temp = new JTabbedPane();
        jTabbedPane5.addTab(fileName, temp);
        temp.addTab("C3@", semScrollPanesC[currentSemTextIdx]);
        temp.addTab("Errors", semScrollPanesE[currentSemTextIdx]);
    }

    void setFileCount() {
        lexicPanes = new JTextArea[Main2021.filesCount];
        lexicScrollPanes = new JScrollPane[Main2021.filesCount];
        sintPanes = new JTextArea[Main2021.filesCount];
        sintScrollPanes = new JScrollPane[Main2021.filesCount];
        semPanesCode = new JTextArea[Main2021.filesCount];
        semPanesError = new JTextArea[Main2021.filesCount];
        semScrollPanesC = new JScrollPane[Main2021.filesCount];
        semScrollPanesE = new JScrollPane[Main2021.filesCount];
    }

    String getFolder() {
        if (this.carpeta != null) {
            return this.carpeta;
        } else {
            throw new UnsupportedOperationException("An error has ocurred");
        }
    }

    public void sintacticError(StringBuilder msg) {
        sintacticText.append(msg);
        this.sintPanes[currentSintTextIdx].setFont(new Font("Verdana", Font.BOLD, 12));
        this.sintPanes[currentSintTextIdx].setForeground(Color.RED);
        this.sintPanes[currentSintTextIdx].setText(sintacticText.toString());
    }
    
    public void semanticError(StringBuilder msg) {
        semanticError.append(msg);
        this.semPanesError[currentSemTextIdx].setFont(new Font("Verdana", Font.BOLD, 12));
        this.semPanesError[currentSemTextIdx].setForeground(Color.RED);
        this.semPanesError[currentSemTextIdx].setText(semanticError.toString());
    }
    
    public void semanticCode(StringBuilder msg) {
        semanticCode.append(msg);
        this.semPanesCode[currentSemTextIdx].setFont(new Font("Verdana", Font.PLAIN, 12));
        this.semPanesCode[currentSemTextIdx].setForeground(Color.BLACK);
        this.semPanesCode[currentSemTextIdx].setText(semanticCode.toString()+'\n');
    }

    public boolean semantic() {
        return this.semantic;
    }
    
    public void semantic(boolean semantic){
        this.semantic = semantic;
    }
}
